name: Frontend

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - ./**

jobs:
  run-lint:
    # if: github.event.pull_request.draft == false
    defaults:
      run:
        shell: bash
        working-directory: ./.

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    timeout-minutes: 5
    steps:
      # setup
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.17
          cache: yarn
          cache-dependency-path: ././yarn.lock

      - name: Install packages
        run: yarn --ignore-scripts install

      # review dogs

      - name: Run ReviewDog ESLint
        uses: reviewdog/action-eslint@v1
        with:
          reporter: github-pr-review
          workdir: .
          eslint_flags: "src/"
          # fail_on_error: true
          github_token: ${{secrets.GITHUB_TOKEN}}

      - name: Run ReviewDog Prettier
        uses: EPMatt/reviewdog-action-prettier@v1
        with:
          workdir: .
          reporter: github-pr-review
          # fail_on_error: true
          github_token: ${{secrets.GITHUB_TOKEN}}
          prettier_flags: '--check "src/**/*.{js,jsx,ts,tsx}"'
        # run: yarn prettier --check "src/**/*.{js,jsx,ts,tsx}"

      - name: Run ReviewDog stylelint
        uses: reviewdog/action-stylelint@v1
        with:
          reporter: github-pr-review
          workdir: .
          stylelint_input: "src/**/*.css"
          # fail_on_error: true
          github_token: ${{secrets.GITHUB_TOKEN}}

      - name: Run ReviewDog tsc
        uses: EPMatt/reviewdog-action-tsc@v1
        with:
          reporter: github-pr-review
          workdir: .
          # fail_on_error: true
          github_token: ${{secrets.GITHUB_TOKEN}}
